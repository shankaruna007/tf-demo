name: Terraform Cleanup

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  terraform-cleanup:
    name: 'Post Apply Cleanup'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'us-east-1'
      TF_VERSION: '1.5.0'
      TFSEC_VERSION: '1.29.0'

    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v3

    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 'Install tfsec'
      run: |
        # Download tfsec binary
        curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
        # Verify that the downloaded file is not an HTML page (in case of failed download)
        if file tfsec | grep -q 'HTML'; then
          echo "Error: Downloaded file is not a binary. Please check the URL."
          exit 1
        fi
        # Make tfsec executable
        chmod +x tfsec
        # Move tfsec to the system's PATH (e.g., /usr/local/bin)
        mv tfsec /usr/local/bin/
        # Verify the installation
        tfsec --version

    - name: 'Terraform Init'
      run: terraform init

    - name: 'Terraform Plan Destroy'
      run: terraform plan -destroy -out=tfplan-destroy

    - name: 'Terraform Apply Destroy'
      run: terraform apply -auto-approve tfplan-destroy
